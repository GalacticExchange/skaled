name: Build and test skaled
on: [push]
defaults:
  run:
    shell: bash
jobs:
  build:
    runs-on: ubuntu-latest
    env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Extract repo name
        run:   echo ::set-env name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')
        shell: bash
      - name: Extract branch name
        run: echo "::set-env name=BRANCH_NAME::$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')"
      - name: checkout
        uses: actions/checkout@v1
      - name: Submodule update
        run: git submodule update --init --recursive
      - name: update apt
        run: sudo add-apt-repository ppa:ubuntu-toolchain-r/test;

      - name: Build all
        run: |
          mkdir build
          mkdir build/skaled
          echo "test" > build/skaled/skaled

      - name: Build and publish container
        if: contains(github.ref, 'develop') || contains(github.ref, 'beta') || contains(github.ref, 'master') || contains(github.ref, 'stable')
        run: |
          cp build/skaled/skaled scripts/skale_build/executable/
          export BRANCH=${GITHUB_REF##*/}
          echo "Branch $BRANCH"
          export VERSION=$(cat VERSION)
          export VERSION=$(bash ./scripts/calculate_version.sh $BRANCH $VERSION)
          echo "::set-env name=VERSION::$VERSION"
          echo "Version $VERSION"
          export RELEASE=true
          echo "::set-env name=RELEASE::$RELEASE"
          #bash ./scripts/build_and_publish.sh
      - name: Create Release
        if: contains(github.ref, 'develop') || contains(github.ref, 'beta') || contains(github.ref, 'master') || contains(github.ref, 'stable')
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}
          draft: false
          prerelease: true
      - name: Upload skaled binary to Release
        if: contains(github.ref, 'develop') || contains(github.ref, 'beta') || contains(github.ref, 'master') || contains(github.ref, 'stable')      
        uses: actions/upload-release-asset@latest
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/skaled/skaled
          asset_name: skaled
          asset_content_type: application/octet-stream






